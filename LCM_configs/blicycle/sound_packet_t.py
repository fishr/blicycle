"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

class sound_packet_t(object):
    __slots__ = ["sound_id", "newSound", "solo", "fade"]

    def __init__(self):
        self.sound_id = 0
        self.newSound = False
        self.solo = False
        self.fade = 0

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(sound_packet_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">hbbb", self.sound_id, self.newSound, self.solo, self.fade))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != sound_packet_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return sound_packet_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = sound_packet_t()
        self.sound_id, self.newSound, self.solo, self.fade = struct.unpack(">hbbb", buf.read(5))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if sound_packet_t in parents: return 0
        tmphash = (0xcdfad2258b15661e) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if sound_packet_t._packed_fingerprint is None:
            sound_packet_t._packed_fingerprint = struct.pack(">Q", sound_packet_t._get_hash_recursive([]))
        return sound_packet_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

